name: Go Tests

on: 
  pull_request:
    types: [opened, reopened, synchronize]
    branches: [main]
permissions:
  pull-requests: write

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install `go`
        uses: actions/setup-go@v3
        with: 
          go-version: '1.19'

      - name: Install `gocover-cobertura`
        run: |
          go get golang.org/x/tools/cmd/cover
          go get github.com/t-yuki/gocover-cobertura
          go install github.com/t-yuki/gocover-cobertura

      - name: Generate test file
        run: sh scripts/coverage-report.sh

      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with: 
          filename: coverage.cobertura.xml
          badge: true
          fail_below_min: false
          format: markdown
          indicators: true
          output: both
          thresholds: '95'

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md

      - name: Fail if below
        run: sh scripts/check-coverage.sh
